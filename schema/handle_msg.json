{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "recover"
      ],
      "properties": {
        "recover": {
          "type": "object",
          "required": [
            "gp"
          ],
          "properties": {
            "gp": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "propose_subscription"
      ],
      "properties": {
        "propose_subscription": {
          "type": "object",
          "required": [
            "max_commitment",
            "min_commitment"
          ],
          "properties": {
            "max_commitment": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "min_commitment": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "min_days_of_notice": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint16",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "accept_subscriptions"
      ],
      "properties": {
        "accept_subscriptions": {
          "type": "object",
          "required": [
            "subscriptions"
          ],
          "properties": {
            "subscriptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AcceptSubscription"
              },
              "uniqueItems": true
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "issue_capital_calls"
      ],
      "properties": {
        "issue_capital_calls": {
          "type": "object",
          "required": [
            "calls"
          ],
          "properties": {
            "calls": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CallIssuance"
              },
              "uniqueItems": true
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "close_capital_calls"
      ],
      "properties": {
        "close_capital_calls": {
          "type": "object",
          "required": [
            "calls",
            "is_retroactive"
          ],
          "properties": {
            "calls": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CallClosure"
              },
              "uniqueItems": true
            },
            "is_retroactive": {
              "type": "boolean"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "issue_redemptions"
      ],
      "properties": {
        "issue_redemptions": {
          "type": "object",
          "required": [
            "redemptions"
          ],
          "properties": {
            "redemptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Redemption"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim_redemption"
      ],
      "properties": {
        "claim_redemption": {
          "type": "object",
          "required": [
            "asset",
            "capital"
          ],
          "properties": {
            "asset": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "capital": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "issue_distributions"
      ],
      "properties": {
        "issue_distributions": {
          "type": "object",
          "required": [
            "distributions"
          ],
          "properties": {
            "distributions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Distribution"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim_distribution"
      ],
      "properties": {
        "claim_distribution": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "issue_withdrawal"
      ],
      "properties": {
        "issue_withdrawal": {
          "type": "object",
          "required": [
            "amount",
            "to"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "memo": {
              "type": [
                "string",
                "null"
              ]
            },
            "to": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AcceptSubscription": {
      "type": "object",
      "required": [
        "commitment",
        "is_retroactive",
        "subscription"
      ],
      "properties": {
        "commitment": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "is_retroactive": {
          "type": "boolean"
        },
        "subscription": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "CallClosure": {
      "type": "object",
      "required": [
        "subscription"
      ],
      "properties": {
        "subscription": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "CallIssuance": {
      "type": "object",
      "required": [
        "amount",
        "subscription"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "days_of_notice": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "subscription": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "Distribution": {
      "type": "object",
      "required": [
        "amount",
        "subscription"
      ],
      "properties": {
        "amount": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "subscription": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "Redemption": {
      "type": "object",
      "required": [
        "asset",
        "capital",
        "subscription"
      ],
      "properties": {
        "asset": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "capital": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "subscription": {
          "$ref": "#/definitions/Addr"
        }
      }
    }
  }
}
