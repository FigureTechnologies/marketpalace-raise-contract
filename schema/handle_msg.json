{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "recover"
      ],
      "properties": {
        "recover": {
          "type": "object",
          "required": [
            "gp"
          ],
          "properties": {
            "gp": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_required_attestations"
      ],
      "properties": {
        "update_required_attestations": {
          "type": "object",
          "required": [
            "required_attestations"
          ],
          "properties": {
            "required_attestations": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "migrate_subscriptions"
      ],
      "properties": {
        "migrate_subscriptions": {
          "type": "object",
          "required": [
            "subscriptions"
          ],
          "properties": {
            "subscriptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Addr"
              },
              "uniqueItems": true
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "propose_subscription"
      ],
      "properties": {
        "propose_subscription": {
          "type": "object",
          "properties": {
            "initial_commitment": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "close_subscriptions"
      ],
      "properties": {
        "close_subscriptions": {
          "type": "object",
          "required": [
            "subscriptions"
          ],
          "properties": {
            "subscriptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Addr"
              },
              "uniqueItems": true
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "issue_asset_exchanges"
      ],
      "properties": {
        "issue_asset_exchanges": {
          "type": "object",
          "required": [
            "asset_exchanges"
          ],
          "properties": {
            "asset_exchanges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssueAssetExchange"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cancel_asset_exchanges"
      ],
      "properties": {
        "cancel_asset_exchanges": {
          "type": "object",
          "required": [
            "cancellations"
          ],
          "properties": {
            "cancellations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssueAssetExchange"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "complete_asset_exchange"
      ],
      "properties": {
        "complete_asset_exchange": {
          "type": "object",
          "required": [
            "exchanges"
          ],
          "properties": {
            "exchanges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetExchange"
              }
            },
            "memo": {
              "type": [
                "string",
                "null"
              ]
            },
            "to": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Addr"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_eligible_subscriptions"
      ],
      "properties": {
        "update_eligible_subscriptions": {
          "type": "object",
          "required": [
            "subscriptions"
          ],
          "properties": {
            "subscriptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Addr"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "accept_subscriptions"
      ],
      "properties": {
        "accept_subscriptions": {
          "type": "object",
          "required": [
            "subscriptions"
          ],
          "properties": {
            "subscriptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AcceptSubscription"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "issue_withdrawal"
      ],
      "properties": {
        "issue_withdrawal": {
          "type": "object",
          "required": [
            "amount",
            "capital_denom",
            "to"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "capital_denom": {
              "type": "string"
            },
            "memo": {
              "type": [
                "string",
                "null"
              ]
            },
            "to": {
              "$ref": "#/definitions/Addr"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AcceptSubscription": {
      "type": "object",
      "required": [
        "commitment_in_capital",
        "subscription"
      ],
      "properties": {
        "commitment_in_capital": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "subscription": {
          "$ref": "#/definitions/Addr"
        }
      }
    },
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "AssetExchange": {
      "type": "object",
      "properties": {
        "cap": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "cap_d": {
          "type": [
            "string",
            "null"
          ]
        },
        "com": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "date": {
          "anyOf": [
            {
              "$ref": "#/definitions/ExchangeDate"
            },
            {
              "type": "null"
            }
          ]
        },
        "inv": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        }
      }
    },
    "ExchangeDate": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "due"
          ],
          "properties": {
            "due": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "avl"
          ],
          "properties": {
            "avl": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "IssueAssetExchange": {
      "type": "object",
      "required": [
        "exchanges",
        "subscription"
      ],
      "properties": {
        "exchanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetExchange"
          }
        },
        "subscription": {
          "$ref": "#/definitions/Addr"
        }
      }
    }
  }
}
